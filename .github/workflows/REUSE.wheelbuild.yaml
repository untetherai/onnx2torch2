name: Wheel builder

on:

  workflow_call:

    inputs:
      publish:
        required: false
        type: boolean
        default: false

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:

    build_wheels:
     name: Build wheels on ${{ matrix.os }}
     runs-on: ${{ matrix.os }}
     strategy:
       matrix:
         os: [ubuntu-22.04, windows-2019, macos-latest]
     env:
       CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
       MACOSX_DEPLOYMENT_TARGET: "10.15"
     steps:
       - uses: actions/checkout@v4

       - name: Set up QEMU
         if: runner.os == 'Linux'
         uses: docker/setup-qemu-action@v2
         with:
           platforms: all

       - name: Build wheels
         uses: pypa/cibuildwheel@v2.17.0
         env:
           # configure cibuildwheel to build native archs ('auto'), and some
           # emulated ones
           CIBW_ARCHS_LINUX: auto aarch64 ppc64le

       - uses: actions/upload-artifact@v4
         with:
           name: ${{matrix.os}}-wheels
           path: ./wheelhouse/*.whl

    build_sdist:
        name: Build source dist
        runs-on: ubuntu-latest
        steps:
            - uses: actions/setup-python@v4
              with:
                python-version: '3.12'
            - uses: actions/checkout@v4
              with:
                submodules: recursive
            - name: Build sdist
              run: |
                pip install build
                python -m build --sdist --outdir dist
            - uses: actions/upload-artifact@v4
              with:
                name: sdist
                path: ./dist/*.tar.gz

    publish:
        name: Publish
        if: ${{inputs.publish== true}}
        needs: ['build_wheels', 'build_sdist']
        runs-on: ubuntu-latest
        permissions:
            id-token: write
        steps:
        - uses: actions/setup-python@v4
          with:
            python-version: '3.12'
        - name: Install tools
          run: |
            pip install twine wheel
        - uses: actions/download-artifact@v4
          with:
            name: ubuntu-22.04-wheels
            path: artifacts/linux
        - uses: actions/download-artifact@v4
          with:
            name: windows-2019-wheels
            path: artifacts/windows
        - uses: actions/download-artifact@v4
          with:
            name: macos-latest-wheels
            path: artifacts/macos
        - uses: actions/download-artifact@v4
          with:
            name: sdist
            path: artifacts/sdist
        - name: unify wheel structure
          run: |
            mkdir dist
            cp -R artifacts/windows/* dist
            cp -R artifacts/linux/* dist
            cp -R artifacts/macos/* dist
            cp -R artifacts/sdist/* dist
        - name: Publish to Pypi
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}
